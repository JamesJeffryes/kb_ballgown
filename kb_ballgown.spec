/*
A KBase module: kb_ballgown
*/

module kb_ballgown {

    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    /*
      required params:
      expressionset_ref: ExpressionSet object reference
      diff_expression_matrix_set_name: KBaseSets.DifferetialExpressionMatrixSet name
      condition_labels: conditions for expression set object
      alpha_cutoff: q value cutoff
      fold_change_cutoff: fold change cutoff
      num_threads: number of threads
      workspace_name: the name of the workspace it gets saved to

      optional params:
      maximum_num_genes: used to filter genes in the differential expression matrix
      fold_scale_type: one of ["linear", "log2+1", "log10+1"]

    */
    typedef structure{
        obj_ref expressionset_ref;
        string diff_expression_matrix_set_suffix;
        list<string> condition_labels;
        float alpha_cutoff;
        float fold_change_cutoff;
        int num_threads;
        string workspace_name;
        int maximum_num_genes;
        string fold_scale_type;
    } BallgownInput;

    /*
        result_directory: folder path that holds all files generated by run_ballgown_app
        diff_expression_obj_ref: generated RNASeqDifferetialExpression object reference
        filtered_expression_matrix_ref: generated ExpressionMatrix object reference
        report_name: report name generated by KBaseReport
        report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        obj_ref diff_expression_matrix_set_ref;
        string report_name;
        string report_ref;
    }BallgownResult;

    /*
        run_ballgown_app: run Ballgown app

        http://bioconductor.org/packages/release/bioc/html/ballgown.html
    */
    funcdef run_ballgown_app(BallgownInput params)
        returns (BallgownResult returnVal) authentication required;
};
